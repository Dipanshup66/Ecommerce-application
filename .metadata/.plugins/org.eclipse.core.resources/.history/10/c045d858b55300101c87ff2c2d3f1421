package com.dipanshu.user_service.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.dipanshu.common.controller.BaseController;
import com.dipanshu.common.controller.GResponse;
import com.dipanshu.user_service.feignclient.RoleClient;
import com.dipanshu.user_service.form.UserForm;
import com.dipanshu.user_service.model.User;
import com.dipanshu.user_service.service.UserService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/users")
public class UserController extends BaseController<UserForm, User, UserService> {

	private final UserService userService;

	@Autowired
	private RoleClient roleClient;

	@Autowired
	public UserController(UserService userService) {
		super(userService);
		this.userService = userService;
	}

	@GetMapping("/verify")
	public boolean verify(@RequestParam String email, @RequestParam String password) {

		User dto = userService.authenticate(email, password);
		if (dto != null) {
			return true;
		}

		return false;
	}

	@GetMapping("/by-email")
	public User getUserByEmail(@RequestParam String email) {

		return userService.findByLoginId(email);

	}

	public GResponse registerUser(@RequestBody @Valid UserForm form, BindingResult bindingResult) {
		GResponse res = validate(bindingResult);

		if (!res.isSuccess()) {
			return res;
		}
		User dto = (User) form.getDto();

		return res;

	}

}
