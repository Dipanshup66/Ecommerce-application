package com.dipanshu.user_service.auth.util;
package com.dipanshu.user_service.auth.filter;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;
import org.springframework.web.filter.OncePerRequestFilter;
import com.dipanshu.user_service.auth.util.JwtUtil;
import com.dipanshu.user_service.service.UserService;
import com.dipanshu.user_service.model.User;
import java.io.IOException;

public class JwtAuthFilter extends OncePerRequestFilter {
	private final JwtUtil jwtUtil;
	private final UserService userService;

	public JwtAuthFilter(JwtUtil jwtUtil, UserService userService) {
		this.jwtUtil = jwtUtil;
		this.userService = userService;
	}

	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		String authHeader = request.getHeader("Authorization");
		String token = null;
		String username = null;
		// header se token nikalo
		if (authHeader != null && authHeader.startsWith("Bearer ")) {
			token = authHeader.substring(7); // remove Bearer
			username = jwtUtil.extractUsername(token);
		}
		// agar username mila aur already security context empty hai to
		if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {
			User userDetails = userService.findByEmail(username);
			if (userDetails != null) {
				UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(userDetails,
						null, null);
				authToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));
				SecurityContextHolder.getContext().setAuthentication(authToken);
			}
		}
		filterChain.doFilter(request, response);
	}
}
