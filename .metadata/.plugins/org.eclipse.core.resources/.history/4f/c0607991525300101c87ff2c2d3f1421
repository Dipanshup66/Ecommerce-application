package com.dipanshu.auth_service.auth.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dipanshu.auth_service.auth.form.AuthForm;
import com.dipanshu.auth_service.auth.util.JwtUtil;
import com.dipanshu.auth_service.model.UserClient;
import com.dipanshu.common.controller.BaseController;
import com.dipanshu.common.controller.GResponse;
import com.dipanshu.user_service.auth.dto.LoginRequest;

import com.dipanshu.user_service.model.User;
import com.dipanshu.user_service.service.UserService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/auth")
public class AuthController {

	@Autowired
	private UserClient userClient;

	@Autowired
	private JwtUtil jwtUtil;

	@Autowired
	public AuthController(UserClient userClient, JwtUtil jwtUtil) {
		this.userClient = userClient;
	}

	@PostMapping("/login")
	public GResponse login(@RequestBody @Valid AuthForm form, BindingResult bindingResult) {
		GResponse res = validate(bindingResult);

		if (!res.isSuccess()) {
			return res;
		}
		AuthForm user = form.getDto();
		UserClient dto = userClient.authenticate(user.getEmail(), user.getPassword());
		if (dto == null) {
			res.setSuccess(false);
			res.addMessage("Invalid Email Id");
		} else {
			res.setSuccess(true);
			res.addData(dto);
			String token = jwtUtil.generateToken(dto.getEmail());
			res.addResult("token", token);
			return res;

		}
		return res;

	}

}
