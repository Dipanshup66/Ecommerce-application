package com.dipanshu.productservice.product_service.form;

import java.math.BigDecimal;

import com.dipanshu.common.controller.BaseEntity;
import com.dipanshu.common.controller.BaseForm;
import com.dipanshu.productservice.product_service.model.Product;

import jakarta.validation.constraints.DecimalMax;
import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PositiveOrZero;

public class ProductForm extends BaseForm {

	@NotBlank(message = "Product name is required")
	private String name;

	@NotBlank(message = "Description is required")
	private String description;

	@NotNull(message = "Price is required")
	@PositiveOrZero(message = "Price must be positive")
	private BigDecimal price;

	@PositiveOrZero(message = "DiscountPrice must be positive")
	private BigDecimal discountPrice;

	@NotNull(message = "Stock quantity is required")
	@Min(value = 0, message = "Stock must be 0 or more")
	private int stock;

	@NotBlank(message = "Brand is required")
	private String brand;

	@NotNull(message = "Category ID is required")
	private Long categoryId;

	private byte[] image;

	@DecimalMin(value = "0.0", inclusive = true, message = "Rating must be 0 or more")
	@DecimalMax(value = "5.0", inclusive = true, message = "Rating can't be more than 5")
	private Double rating;

	private boolean isActive = true;

	@NotBlank(message = "SKU is required")
	private String sku;

	@NotNull(message = "Weight is required")
	@PositiveOrZero(message = "Weight must be positive")
	private Double weight;

	@NotBlank(message = "Color is required")
	private String color;

	@NotBlank(message = "Size is required")
	private String size;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public BigDecimal getPrice() {
		return price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	public BigDecimal getDiscountPrice() {
		return discountPrice;
	}

	public void setDiscountPrice(BigDecimal discountPrice) {
		this.discountPrice = discountPrice;
	}

	public int getStock() {
		return stock;
	}

	public void setStock(int stock) {
		this.stock = stock;
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public Long getCategoryId() {
		return categoryId;
	}

	public void setCategoryId(Long categoryId) {
		this.categoryId = categoryId;
	}

	public byte[] getImage() {
		return image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	public Double getRating() {
		return rating;
	}

	public void setRating(Double rating) {
		this.rating = rating;
	}

	public boolean isActive() {
		return isActive;
	}

	public void setActive(boolean isActive) {
		this.isActive = isActive;
	}

	public String getSku() {
		return sku;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	public Double getWeight() {
		return weight;
	}

	public void setWeight(Double weight) {
		this.weight = weight;
	}

	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	public String getSize() {
		return size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Override
	public BaseEntity getDto() {
		Product dto = initEntity(new Product());

		dto.setName(name);
		dto.setDescription(description);
		dto.setPrice(price);
		dto.setDiscountPrice(discountPrice);
		dto.setStock(stock);
		dto.setBrand(brand);
		dto.setCategoryId(categoryId);
		dto.setImage(image);
		dto.setRating(rating);
		dto.setSku(sku);
		dto.setWeight(weight);
		dto.setColor(color);
		dto.setSize(size);
		dto.setActive(isActive);
		return super.getDto();
	}

}
