package com.dipanshu.common.controller;

import java.util.List;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.TypedQuery;
import jakarta.persistence.criteria.CriteriaBuilder;
import jakarta.persistence.criteria.CriteriaQuery;
import jakarta.persistence.criteria.Predicate;
import jakarta.persistence.criteria.Root;

public class BaseRepositoryImpl<T extends BaseEntity> implements BaseRepository<T> {

	@PersistenceContext
	public EntityManager entityManager;

	@Override
	public void setEntityManager(EntityManager entityManager) {
		this.entityManager = entityManager;
	}

	@Override
	public long add(T dto) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void update(T dto) {
		// TODO Auto-generated method stub

	}

	@Override
	public void delete(T dto) {
		// TODO Auto-generated method stub

	}

	@Override
	public T findByPk(long pk) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public T findByUniquekey(String attribute, Object val) {
		Class<T> dtoClass = getDTOClass();

		CriteriaBuilder builder = entityManager.getCriteriaBuilder();

		CriteriaQuery<T> cq = builder.createQuery(dtoClass);

		Root<T> qRoot = cq.from(dtoClass);

		Predicate condition = builder.equal(qRoot.get(attribute), val);

		cq.where(condition);

		TypedQuery<T> query = entityManager.createQuery(cq);

		List<T> list = query.getResultList();

		T dto = null;

		if (list.size() > 0) {
			dto = list.get(0);
		}

		return dto;

	}

	private abstract Class<T> getDTOClass();

	@Override
	public List search(T dto, int pageNo, int pageSize) {
		// TODO Auto-generated method stub
		return null;
	}

}
